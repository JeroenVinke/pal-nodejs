{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/// <reference path=\"./nodejs-global.ts\" />\r\n\r\nimport { initializePAL, DOM, PLATFORM, FEATURE, isInitialized } from 'aurelia-pal';\r\nimport { buildPal } from './nodejs-pal-builder';\r\nimport { MutationNotifier } from './polyfills/mutation-observer';\r\n\r\n/**\r\n* Initializes the PAL with the NodeJS-targeted implementation.\r\n*/\r\nexport function initialize(): void {\r\n  if (isInitialized) {\r\n    return;\r\n  }\r\n\r\n  let pal = buildPal();\r\n\r\n  initializePAL((platform, feature, dom) => {\r\n    Object.assign(platform, pal.platform);\r\n    Object.setPrototypeOf(platform, pal.platform.constructor.prototype);\r\n\r\n    Object.assign(dom, pal.dom);\r\n    Object.setPrototypeOf(dom, pal.dom.constructor.prototype);\r\n\r\n    Object.assign(feature, pal.feature);\r\n    Object.setPrototypeOf(feature, pal.feature.constructor.prototype);\r\n\r\n    (function (global) {\r\n      global.console = global.console || {};\r\n      let con = global.console;\r\n      let prop;\r\n      let method;\r\n      let empty = {};\r\n      let dummy = function () { };\r\n      let properties = 'memory'.split(',');\r\n      let methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\r\n        'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\r\n        'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\r\n      while (prop = properties.pop()) if (!con[prop]) con[prop] = empty;\r\n      while (method = methods.pop()) if (!con[method]) con[method] = dummy;\r\n    })(platform.global);\r\n\r\n    if (platform.global.console && typeof console.log === 'object') {\r\n      if (typeof console['debug'] === 'undefined') {\r\n        console['debug'] = this.bind(console['log'], console);\r\n      }\r\n      ['log', 'info', 'warn', 'error', 'assert', 'dir', 'clear', 'profile', 'profileEnd'].forEach(function (method) {\r\n        console[method] = this.bind(console[method], console);\r\n      }, Function.prototype.call);\r\n    }\r\n\r\n    Object.defineProperty(dom, 'title', {\r\n      get: function () {\r\n        return pal.global.document.title;\r\n      },\r\n      set: function (value) {\r\n        pal.global.document.title = value;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(dom, 'activeElement', {\r\n      get: function () {\r\n        return pal.global.document.activeElement;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(platform, 'XMLHttpRequest', {\r\n      get: function () {\r\n        return pal.global.XMLHttpRequest;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * @description initializes and makes variables like 'window' into NodeJS globals\r\n */\r\nexport function globalize() {\r\n  initialize();\r\n  global.window = global.self = PLATFORM.global;\r\n  global.document = PLATFORM.global.document;\r\n  global.Element = DOM.Element;\r\n  global.SVGElement = DOM.SVGElement;\r\n  global.HTMLElement = PLATFORM.global.HTMLElement;\r\n  global.requestAnimationFrame = PLATFORM.global.requestAnimationFrame;\r\n  global.location = PLATFORM.location;\r\n  global.history = PLATFORM.history;\r\n  global.System = {\r\n    import(moduleId: string) {\r\n      try {\r\n        return Promise.resolve(require(moduleId));\r\n      } catch (e) {\r\n        return Promise.reject(e);\r\n      }\r\n    }\r\n  };\r\n  global.PAL = {\r\n    DOM, PLATFORM, FEATURE\r\n  };\r\n  return global;\r\n}\r\n\r\nexport function reset(window?: Window) {\r\n  if (window) {\r\n    window.close();\r\n  }\r\n\r\n  MutationNotifier.getInstance().destruct();\r\n}"],"sourceRoot":"../src/"}